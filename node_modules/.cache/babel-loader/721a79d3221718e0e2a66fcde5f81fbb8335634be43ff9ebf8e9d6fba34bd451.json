{"ast":null,"code":"var _jsxFileName = \"/Users/conterfeit/Work/TEST01/test01/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\n// import './App.scss';\n//\n// function App() {\n//     const [open, setOpen] = React.useState(false);\n//   return (\n//     <div className=\"App\">\n//       <button onClick={() => setOpen(true)} className=\" open-modal-btn\">✨ Открыть окно</button>\n//       {/*{*/}\n//       {/*    open &&   (<div className=\"overlay\">*/}\n//       {/*  <div className=\"modal\">*/}\n//       {/*    <svg onClick={() => setOpen(false)} height=\"200\" viewBox=\"0 0 200 200\" width=\"200\">*/}\n//       {/*      <title />*/}\n//       {/*      <path d=\"M114,100l49-49a9.9,9.9,0,0,0-14-14L100,86,51,37A9.9,9.9,0,0,0,37,51l49,49L37,149a9.9,9.9,0,0,0,14,14l49-49,49,49a9.9,9.9,0,0,0,14-14Z\" />*/}\n//       {/*    </svg>*/}\n//       {/*<img src=\"https://media.giphy.com/media/H3HMpTZHL2pgKqfb9N/giphy.gif\"  />*/}\n//       {/*  </div>*/}\n//       {/*</div>) /// это все называется условный рендер - идеальный рабочий способ если работать без анимаций*/}\n//\n//       {/*}*/}\n//\n//       <div className={`overlay animated ${open ? 'show' : ''}` }>\n//         <div className=\"modal\">\n//           <svg onClick={() => setOpen(false)} height=\"200\" viewBox=\"0 0 200 200\" width=\"200\">\n//             <title />\n//             <path d=\"M114,100l49-49a9.9,9.9,0,0,0-14-14L100,86,51,37A9.9,9.9,0,0,0,37,51l49,49L37,149a9.9,9.9,0,0,0,14,14l49-49,49,49a9.9,9.9,0,0,0,14-14Z\" />\n//           </svg>\n//           <img src=\"https://media.giphy.com/media/H3HMpTZHL2pgKqfb9N/giphy.gif\"  />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n//\n// export default App;\n\nimport React, { useState } from 'react';\nimport './App.scss';\n// import PhoneInput from \"react-phone-number-input/input-min\";\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  // const [value, setState] = useState();\n  const [value, setValue] = useState();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    alert(`Phone number submitted: ${phoneNumber}`);\n  };\n  const [selectedValue, setSelectedValue] = useState('');\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpen(true),\n      className: \" open-modal-btn\",\n      children: \"\\uD83E\\uDD9F \\u0417\\u0430\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0437\\u0432\\u043E\\u043D\\u043E\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `overlay animated ${open ? 'show' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          onClick: () => setOpen(false),\n          height: \"200\",\n          viewBox: \"0 0 200 200\",\n          width: \"200\",\n          children: [/*#__PURE__*/_jsxDEV(\"title\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M114,100l49-49a9.9,9.9,0,0,0-14-14L100,86,51,37A9.9,9.9,0,0,0,37,51l49,49L37,149a9.9,9.9,0,0,0,14,14l49-49,49,49a9.9,9.9,0,0,0,14-14Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"regisrration\",\n          className: \"form\",\n          method: \"post\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"telephone\",\n              type: \"tel\",\n              name: \"tel\",\n              required: true,\n              value: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"dropdown\",\n              className: \"time\",\n              required: true,\n              value: \"\\u0423\\u0434\\u043E\\u0431\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F \\u0434\\u043B\\u044F \\u0437\\u0432\\u043E\\u043D\\u043A\\u0430\",\n              value: selectedValue,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0423\\u0434\\u043E\\u0431\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F \\u0434\\u043B\\u044F \\u0437\\u0432\\u043E\\u043D\\u043A\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"option1\",\n                children: \"11:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"option2\",\n                children: \"11:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"option3\",\n                children: \"12:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"option4\",\n                children: \"12:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"option5\",\n                children: \"13:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"option6\",\n                children: \"13:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"option7\",\n                children: \"14:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this); // а это уже анимированный класс\n}\n\n// можно еще разбить объекты и юзать const Modal = ({open, setOpen}) => ( и в скобки вносим класс который overlay) можно сделать и условным рендером, и анимированным классом, только отдельными компонентами\n_s(App, \"kz1enoB34TtRAxFbdqnpqP5F9Pk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","PhoneInput","jsxDEV","_jsxDEV","App","_s","open","setOpen","value","setValue","phoneNumber","setPhoneNumber","handleSubmit","event","preventDefault","alert","selectedValue","setSelectedValue","handleChange","target","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","height","viewBox","width","d","name","method","type","required","id","onChange","_c","$RefreshReg$"],"sources":["/Users/conterfeit/Work/TEST01/test01/src/App.js"],"sourcesContent":[" import logo from './logo.svg';\n// import './App.scss';\n//\n// function App() {\n//     const [open, setOpen] = React.useState(false);\n//   return (\n//     <div className=\"App\">\n//       <button onClick={() => setOpen(true)} className=\" open-modal-btn\">✨ Открыть окно</button>\n//       {/*{*/}\n//       {/*    open &&   (<div className=\"overlay\">*/}\n//       {/*  <div className=\"modal\">*/}\n//       {/*    <svg onClick={() => setOpen(false)} height=\"200\" viewBox=\"0 0 200 200\" width=\"200\">*/}\n//       {/*      <title />*/}\n//       {/*      <path d=\"M114,100l49-49a9.9,9.9,0,0,0-14-14L100,86,51,37A9.9,9.9,0,0,0,37,51l49,49L37,149a9.9,9.9,0,0,0,14,14l49-49,49,49a9.9,9.9,0,0,0,14-14Z\" />*/}\n//       {/*    </svg>*/}\n//       {/*<img src=\"https://media.giphy.com/media/H3HMpTZHL2pgKqfb9N/giphy.gif\"  />*/}\n//       {/*  </div>*/}\n//       {/*</div>) /// это все называется условный рендер - идеальный рабочий способ если работать без анимаций*/}\n//\n//       {/*}*/}\n//\n//       <div className={`overlay animated ${open ? 'show' : ''}` }>\n//         <div className=\"modal\">\n//           <svg onClick={() => setOpen(false)} height=\"200\" viewBox=\"0 0 200 200\" width=\"200\">\n//             <title />\n//             <path d=\"M114,100l49-49a9.9,9.9,0,0,0-14-14L100,86,51,37A9.9,9.9,0,0,0,37,51l49,49L37,149a9.9,9.9,0,0,0,14,14l49-49,49,49a9.9,9.9,0,0,0,14-14Z\" />\n//           </svg>\n//           <img src=\"https://media.giphy.com/media/H3HMpTZHL2pgKqfb9N/giphy.gif\"  />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n//\n// export default App;\n\nimport React, {useState} from 'react';\nimport './App.scss';\n// import PhoneInput from \"react-phone-number-input/input-min\";\nimport PhoneInput from 'react-phone-number-input';\n import 'react-phone-number-input/style.css';\n\n\nfunction App() {\n    const [open, setOpen] = React.useState(false);\n    // const [value, setState] = useState();\n    const [value, setValue] = useState();\n\n\n    const [phoneNumber, setPhoneNumber] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        alert(`Phone number submitted: ${phoneNumber}`);\n    };\n\n    const [selectedValue, setSelectedValue] = useState('');\n\n    const handleChange = (event) => {\n        setSelectedValue(event.target.value);\n    };\n\n\n    return (\n        <div className=\"App\">\n            <button onClick={() => setOpen(true)} className=\" open-modal-btn\">🦟 Заказать звонок</button>\n            {/*{*/}\n            {/*    open &&   (<div className=\"overlay\">*/}\n            {/*  <div className=\"modal\">*/}\n            {/*    <svg onClick={() => setOpen(false)} height=\"200\" viewBox=\"0 0 200 200\" width=\"200\">*/}\n            {/*      <title />*/}\n            {/*      <path d=\"M114,100l49-49a9.9,9.9,0,0,0-14-14L100,86,51,37A9.9,9.9,0,0,0,37,51l49,49L37,149a9.9,9.9,0,0,0,14,14l49-49,49,49a9.9,9.9,0,0,0,14-14Z\" />*/}\n            {/*    </svg>*/}\n            {/*<img src=\"https://media.giphy.com/media/H3HMpTZHL2pgKqfb9N/giphy.gif\"  />*/}\n            {/*  </div>*/}\n            {/*</div>) /// это все называется условный рендер - идеальный рабочий способ если работать без анимаций*/}\n\n            {/*}*/}\n\n            <div className={`overlay animated ${open ? 'show' : ''}` }>\n                <div className=\"modal\">\n                    <svg onClick={() => setOpen(false)} height=\"200\" viewBox=\"0 0 200 200\" width=\"200\">\n                        <title />\n                        <path d=\"M114,100l49-49a9.9,9.9,0,0,0-14-14L100,86,51,37A9.9,9.9,0,0,0,37,51l49,49L37,149a9.9,9.9,0,0,0,14,14l49-49,49,49a9.9,9.9,0,0,0,14-14Z\" />\n                    </svg>\n                    {/*<img src=\"https://media.giphy.com/media/H3HMpTZHL2pgKqfb9N/giphy.gif\"  />*/}\n                    {/*<div className=\"telephone\">*/}\n                    {/*    <input type=\"text\" name=\"telefont\" className=\"tele\" placeholder=\"Телефон\"/>*/}\n                    {/*</div>*/}\n                    {/*<div className=\"time\">*/}\n                    {/*    <textarea name=\"message\" className=\"message\" placeholder=\"Удобное время для звонка\"></textarea>*/}\n                    {/*</div>*/}\n                    {/*<input type=\"submit\" className=\"submit\" name=\"submit\" value=\"заказать\"/>*/}\n                    <form name=\"regisrration\" className=\"form\" method=\"post\">\n                        <div className=\"login\">\n                            <input className=\"telephone\" type=\"tel\"  name=\"tel\" required value=\"Номер телефона\"\n                                  />\n                            {/*<form onSubmit={handleSubmit}>*/}\n                            {/*    <label htmlFor=\"phoneNumber\">Phone Number:</label>*/}\n\n                            {/*    <button type=\"submit\">Submit</button>*/}\n                            {/*</form>*/}\n\n\n                                {/*<input className=\"time\"  required value=\"Удобное время для звонка\" name=\"password\"/>*/}\n                            {/*<select name=\"select\" c required value=\"Удобное время для звонка\" name=\"password\">*/}\n                            {/*    <option value=\"s1\" >11:00</option>*/}\n                            {/*    <option value=\"s2\">11:30</option>*/}\n                            {/*    <option value=\"s3\" selected>12:00</option>*/}\n                            {/*    <option value=\"s4\">12:30</option>*/}\n                            {/*    <option value=\"s5\" >13:00</option>*/}\n                            {/*    <option value=\"s6\" selected>13:30</option>*/}\n                            {/*    <option value=\"s7\">14:00</option>*/}\n                            {/*    <option value=\"s8\" >14:30</option>*/}\n                            {/*</select>*/}\n\n                            {/*<label htmlFor=\"dropdown\">Select an option:</label>*/}\n                            <select id=\"dropdown\" className='time' required value=\"Удобное время для звонка\" value={selectedValue} onChange={handleChange}>\n                                <option value=\"\">Удобное время для звонка</option>\n                                <option value=\"option1\">11:00</option>\n                                <option value=\"option2\">11:30</option>\n                                <option value=\"option3\">12:00</option>\n                                <option value=\"option4\">12:30</option>\n                                <option value=\"option5\">13:00</option>\n                                <option value=\"option6\">13:30</option>\n                                <option value=\"option7\">14:00</option>\n                            </select>\n                        </div>\n                    </form>\n\n                    {/*<PhoneInput*/}\n                    {/*    placeholder=\"+7 (___) ___-__-__\"*/}\n                    {/*    value={this.state.phone}*/}\n                    {/*    onChange={phone => this.setState({ phone })}*/}\n                    {/*/>*/}\n                    {/*<PhoneInput*/}\n                    {/*    placeholder=\"+7 (___) ___-__-__\"*/}\n                    {/*    defaultCountry=\"RU\"*/}\n                    {/*    value={value}*/}\n                    {/*    onChange={setValue} />*/}\n                </div>\n                {/*    <form onSubmit={handleSubmit}>*/}\n                {/*        <label htmlFor=\"phoneNumber\">Phone Number:</label>*/}\n                {/*        <PhoneInput*/}\n                {/*            id=\"phoneNumber\"*/}\n                {/*            name=\"phoneNumber\"*/}\n                {/*            value={phoneNumber}*/}\n                {/*            onChange={setPhoneNumber}*/}\n                {/*            placeholder=\"Enter phone number\"*/}\n                {/*            required*/}\n                {/*        />*/}\n                {/*        <button type=\"submit\">Submit</button>*/}\n                {/*    </form>*/}\n            </div>\n        </div> );  // а это уже анимированный класс\n            }\n\n            // можно еще разбить объекты и юзать const Modal = ({open, setOpen}) => ( и в скобки вносим класс который overlay) можно сделать и условным рендером, и анимированным классом, только отдельными компонентами\n            export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}